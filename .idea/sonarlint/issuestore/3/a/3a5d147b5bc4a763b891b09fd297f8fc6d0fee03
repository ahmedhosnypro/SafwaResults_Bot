
`	java:S112\"FDefine and throw a dedicated exception instead of using a generic one.(Ò‚Òéüÿÿÿÿ
Ž
java:S1319"sThe return type of this method should be an interface such as "Map" rather than the implementation "LinkedHashMap".(­—ó²üÿÿÿÿ
A
java:S1452"&Remove usage of generic wildcard type.(­—ó²üÿÿÿÿ
c
java:S5361S"HReplace this call to "replaceAll()" by a call to the "replace()" method.(†º…®ûÿÿÿÿ
^
java:S5361R"HReplace this call to "replaceAll()" by a call to the "replace()" method.(ýš†Ë
‚
java:S5854Q"gUse the CANON_EQ flag with "Pattern.compile(pattern, CANON_EQ).matcher(input).replaceAll(replacement)".(“ä¥èüÿÿÿÿ
c
java:S5361Q"HReplace this call to "replaceAll()" by a call to the "replace()" method.(“ä¥èüÿÿÿÿ
H
java:S1135v"2Complete the task associated to this TODO comment.(ä·½¯
d
java:S5361œ"HReplace this call to "replaceAll()" by a call to the "replace()" method.(†º…®ûÿÿÿÿ
_
java:S5361›"HReplace this call to "replaceAll()" by a call to the "replace()" method.(ýš†Ë
ƒ
java:S5854š"gUse the CANON_EQ flag with "Pattern.compile(pattern, CANON_EQ).matcher(input).replaceAll(replacement)".(“ä¥èüÿÿÿÿ
d
java:S5361š"HReplace this call to "replaceAll()" by a call to the "replace()" method.(“ä¥èüÿÿÿÿ